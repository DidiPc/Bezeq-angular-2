'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Emitter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Rx = require('rxjs/Rx');

var _Rx2 = _interopRequireDefault(_Rx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Emitter = exports.Emitter = function () {
  function Emitter() {
    _classCallCheck(this, Emitter);

    this.sinks = {};
  }

  _createClass(Emitter, [{
    key: 'publish',
    value: function publish(event, data) {
      if (!this.sinks[event]) {
        console.warn(event + ' does not have any registered listeners. Publish cancelled.');
        return;
      }

      this.sinks[event].next(data);
    }
  }, {
    key: 'subscribe',
    value: function subscribe(event, cb) {
      if (!cb) {
        console.warn('No callback provided for subscription. Subscription cancelled.');
        return;
      }

      if (!this.sinks[event]) {
        this.sinks[event] = new _Rx2.default.Subject();
      }

      return this.sinks[event].subscribe(cb);
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      for (var s in this.sinks) {
        if (this.sinks.hasOwnProperty(s)) {
          this.sinks[s].unsubscribe();
        }
      }

      this.sinks = {};
    }
  }]);

  return Emitter;
}();